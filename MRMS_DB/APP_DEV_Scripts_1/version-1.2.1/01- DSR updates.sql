CREATE TABLE [dbo].[FACT_DSR](
	[DSR_ID] [numeric](24, 0) NOT NULL,
	[MODEL_ID] [numeric](24, 0) NOT NULL,
	[DSR_TITLE] [nvarchar](500) NOT NULL,
	[DEPLOYMENT_PRIOR_TO_APPROVAL] [nvarchar](1) NULL,
	[RATIONALE] nvarchar(1000) NULL,
	[MRM_ACCEPTANCE_OF_RATIONALE] [nvarchar](1) NULL,
	[IMPL_TESTING_DUE_DATE] [datetime2](0) NULL,
	[TARGET_DEPLOYMENT_DATE] [datetime2](0) NULL,
	[ACTUAL_DEPLOYMENT_DATE] [datetime2](0) NULL,
	[RELEASE_IDENTIFIER] [nvarchar](50) NULL,
	[DSR_REVIEWER_ID] [numeric](24, 0) NULL,
	[SOURCE_TYPE] [nvarchar](50) NULL,
	[SOURCE_ID] [numeric](24, 0) NULL,
	[DSR_STATUS] [nvarchar](50) NULL,
	[AUDIT_CREATED_DATE_TIME] [datetime2](0) NULL,
	[AUDIT_CREATED_BY] [numeric](24, 0) NULL,
	[UPDATED_DATE_TIME] [datetime2](0) NULL,
	[UPDATED_BY] [numeric](24, 0) NULL,
	[DSR_CLOSURE_DATE] [datetime2](0) NULL,
	[IS_ACTIVE] [nvarchar](1) NOT NULL,
	[DSR_SUBMITTER_ID] [numeric](24, 0) NULL,
	[DSR_STATUS_ID] [numeric](24, 0) NULL,
	[DSR_APPROVE_COMMENTS] [varchar](1000) NULL,
	[DSR_REJECT_COMMENTS] [varchar](1000) NULL,
	[ACKNOWLEDGEMENT_APPROVE_COMMENTS] [varchar](1000) NULL,
	[DSR_SUBMISSION_DATE] [datetime2](0) NULL,
	[DSR_ACKNOWLEDGE_BY] [numeric](24, 0) NULL,
	[DSR_REVIEWER_APPROVAL_DATE]  [datetime2](0) NULL
	PRIMARY KEY CLUSTERED 
( 	[DSR_ID] ASC )
)
GO	

CREATE SEQUENCE [dbo].[FACT_DSR_SEQ] 
	AS [numeric](24, 0)
	START WITH 1
	INCREMENT BY 1
	MINVALUE -999999999999999999
	MAXVALUE 999999999999999999
	CACHE;
GO

CREATE TABLE [dbo].[REL_DSR_ASSOCIATION](
	[ID] [numeric](24, 0) NOT NULL,
	[DSR_ID] [numeric](24, 0) NOT NULL,
	[ENTITY_TYPE] [nvarchar](50) NULL,
	[ENTITY_ID] [numeric](24, 0) NULL,
	[MODEL_ID] [numeric](24, 0) NULL,
	[ASSOCIATION_DATE] [datetime2](0) NULL,
	[ENTITY_IN_PROGRESS] [nvarchar](1) NULL,
	[IS_ACTIVE] [nvarchar](1) NOT NULL,
PRIMARY KEY CLUSTERED 
([ID] ASC )
) ON [PRIMARY]

GO

CREATE SEQUENCE [dbo].[REL_DSR_ASSOCIATION_SEQ] 
	AS [numeric](24, 0)
	START WITH 1
	INCREMENT BY 1
	MINVALUE -999999999999999999
	MAXVALUE 999999999999999999
	CACHE;
GO

CREATE TABLE [dbo].[REL_DSR_PLATFORM](
	[ID] [numeric](24, 0) NOT NULL,
	[DSR_ID] [numeric](24, 0) NOT NULL,
	[PLATFORM_ID] [numeric](24, 0) NULL,
	[MODEL_ID] [numeric](24, 0) NULL,
	[AIT] [nvarchar](1) NOT NULL,
	[PLATFORM] [nvarchar](100) NULL,
	[FACT_SYS_ID] [numeric](24, 0) NULL,
	[ASSOCIATION_DATE] [datetime2](0) NULL,
	[IS_ACTIVE] [nvarchar](1) NOT NULL,
	[AUDIT_CREATED_DATE_TIME] [datetime2](0) NULL,
	[AUDIT_CREATED_BY] [numeric](24, 0) NULL,
	[UPDATED_DATE_TIME] [datetime2](0) NULL,
	[UPDATED_BY] [numeric](24, 0) NULL,
	
PRIMARY KEY CLUSTERED 
( [ID] ASC )
) ON [PRIMARY]

GO

CREATE SEQUENCE [dbo].[REL_DSR_PLATFORM_SEQ] 
	AS [numeric](24, 0)
	START WITH 1
	INCREMENT BY 1
	MINVALUE -999999999999999999
	MAXVALUE 999999999999999999
	CACHE;	
GO

CREATE TABLE [dbo].[REL_DSR_IMS_ASSOCIATION](
	[DSR_IMS_ASSOCIATION_ID] [numeric](24, 0) NOT NULL,
	[DSR_ID] [numeric](24, 0) NOT NULL,
	[IMS_MODEL_NUMBER_PARENT] [numeric](24, 0) NULL,
	[IMS_MODEL_NUMBER_CHILD] [numeric](24, 0) NULL,
	[ASSOCIATION_DATE] [datetime2](0) NULL,
	[IS_ACTIVE] [nvarchar](1) NOT NULL,
	[AUDIT_CREATED_DATE_TIME] [datetime2](0) NULL,
	[AUDIT_CREATED_BY] [numeric](24, 0) NULL,
	[UPDATED_DATE_TIME] [datetime2](0) NULL,
	[UPDATED_BY] [numeric](24, 0) NULL,
PRIMARY KEY CLUSTERED 
(	[DSR_IMS_ASSOCIATION_ID] ASC )
) ON [PRIMARY]
	
GO
	
CREATE SEQUENCE [dbo].[REL_DSR_IMS_ASSOCIATION_SEQ] 
	AS [numeric](24, 0)
	START WITH 1
	INCREMENT BY 1
	MINVALUE -999999999999999999
	MAXVALUE 999999999999999999
	CACHE;
GO
--TABLE FOR DSR STATUS
CREATE TABLE [dbo].[REF_DSR_STATUS](
	[DSR_STATUS_ID] [numeric](24, 0) NOT NULL,
	[DSR_STATUS] [varchar](100) NOT NULL,
	[IS_ACTIVE] [nvarchar](1) NOT NULL,
	[AUDIT_CREATED_DATE_TIME] [datetime2](0) NULL,
	[AUDIT_CREATED_BY] [numeric](24, 0) NULL,
	[UPDATED_DATE_TIME] [datetime2](0) NULL,
	[UPDATED_BY] [numeric](24, 0) NULL,
PRIMARY KEY CLUSTERED 
(	[DSR_STATUS_ID] ASC))
GO
CREATE SEQUENCE [dbo].[REF_DSR_STATUS_SEQ] 
	AS [numeric](24, 0)
	START WITH 1
	INCREMENT BY 1
	MINVALUE -999999999999999999
	MAXVALUE 999999999999999999
	CACHE;
GO	
	
	
UPDATE FACT_IMPLEMENTATION_SYSTEM SET PRE_DSR='Y';
GO

ALTER TABLE FACT_SUBMISSION ADD DSR_ACKNOWLEDGED VARCHAR(1);
GO

--DSR STATUS 
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Draft', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Cancelled', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Model Retired', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Ready for Deployment', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Deployed - Pending FLU Review', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Deployed - Pending MRM Review', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Ready for Deployment - Returned', 'Y', GETDATE(), -4, GETDATE(), NULL);
INSERT INTO REF_DSR_STATUS (DSR_STATUS_ID, DSR_STATUS, IS_ACTIVE, AUDIT_CREATED_DATE_TIME, AUDIT_CREATED_BY, UPDATED_DATE_TIME, UPDATED_BY) VALUES (NEXT VALUE FOR REF_DSR_STATUS_SEQ, 'Complete', 'Y', GETDATE(), -4, GETDATE(), NULL);
GO

-- NEW TASKS FOR DSR
INSERT INTO "REF_TASK_TYPE" ("TASK_TYPE_ID", "TOOL_TYPE", "WORKFLOW_TYPE", "WORKFLOW_NAME", "TASK_TYPE_NAME", "TASK_RECIPIENT", "TIMELINE_DAYS", "TASK_TYPE_DESC", "IS_COMPUTED") VALUES (103, 'Model', 'DSR', 'Deployment Signoff Review', 'Complete DSR', 'MD, BA', 5, 'When DSR is first created', 'N');
INSERT INTO "REF_TASK_TYPE" ("TASK_TYPE_ID", "TOOL_TYPE", "WORKFLOW_TYPE", "WORKFLOW_NAME", "TASK_TYPE_NAME", "TASK_RECIPIENT", "TIMELINE_DAYS", "TASK_TYPE_DESC", "IS_COMPUTED") VALUES (104, 'Model', 'DSR', 'Deployment Signoff Review', 'Submit Implementation Evidence', 'MD, BA', 0, 'When DSR form is accepted', 'Y');
INSERT INTO "REF_TASK_TYPE" ("TASK_TYPE_ID", "TOOL_TYPE", "WORKFLOW_TYPE", "WORKFLOW_NAME", "TASK_TYPE_NAME", "TASK_RECIPIENT", "TIMELINE_DAYS", "TASK_TYPE_DESC", "IS_COMPUTED") VALUES (105, 'Model', 'DSR', 'Deployment Signoff Review', 'Review Implementation Evidence', 'DSR Reviewer', 5, 'When deployed and implementation evidence is submitted', 'N');
INSERT INTO "REF_TASK_TYPE" ("TASK_TYPE_ID", "TOOL_TYPE", "WORKFLOW_TYPE", "WORKFLOW_NAME", "TASK_TYPE_NAME", "TASK_RECIPIENT", "TIMELINE_DAYS", "TASK_TYPE_DESC", "IS_COMPUTED") VALUES (106, 'Model', 'DSR', 'Deployment Signoff Review', 'Acknowledge Implementation Evidence', 'MVL', 5, 'When DSR Reviewer approves the implementation evidence', 'N');
INSERT INTO "REF_TASK_TYPE" ("TASK_TYPE_ID", "TOOL_TYPE", "WORKFLOW_TYPE", "WORKFLOW_NAME", "TASK_TYPE_NAME", "TASK_RECIPIENT", "TIMELINE_DAYS", "TASK_TYPE_DESC", "IS_COMPUTED") VALUES (107, 'Model', 'DSR', 'Deployment Signoff Review', 'Returned - Submit Implementation Evidence', 'MD, BA', 0, 'If DSR Reviewer or MVL returns the implementation evidence', 'Y');

GO


CREATE OR ALTER  VIEW [dbo].[DSR_VIEW]      
 AS    
SELECT     
ROW_NUMBER() OVER (ORDER BY DSR.DSR_ID) AS view_Id,              
       
 T2.DSR_ID as DsrId      
 ,RDA.ENTITY_TYPE AS EntityType      
 ,RDA.ENTITY_ID AS EntityId      
 ,T2.MODEL_ID AS ModelId          
 ,MI.MODEL_NAME AS ModelName
 ,CASE WHEN T2.MODEL_ID = FS.MODEL_ID AND FS.SUBMISSION_ID = RDA.ENTITY_ID THEN 'Y' ELSE 'N' END AS IsSource
 ,RDA.ASSOCIATION_DATE  AS AssociationDate      
 ,CASE WHEN FS.SUBMISSION_STATUS IN('Initial Assessment','Model Development','Model Validation') THEN 'Y' ELSE 'N' END AS EntityInProgress      
 ,DSR.DSR_TITLE AS Title     
 ,CASE WHEN FIS.AIT='N' THEN FIS.NON_AIT_PLATFORM ELSE RS.SYSTEM_NAME END AS ProductionPlatform      
 ,DSR.DEPLOYMENT_PRIOR_TO_Approval AS DeploymentPriorToApproval     
 ,DSR.RATIONALE AS Rationale      
 ,DSR.IMPL_TESTING_DUE_DATE AS ImplementationTestingDueDate      
 ,DSR.TARGET_DEPLOYMENT_DATE AS TargetDeploymentDate        
 ,DSR.ACTUAL_DEPLOYMENT_DATE AS ActualDeploymentDate      
 ,DSR.RELEASE_IDENTIFIER AS ReleaseIdentifier      
 ,RUB.FULL_NAME AS DsrReviewerName      
 ,CASE WHEN RDS.DSR_STATUS IN ('Deployed - Pending MRM Review','Complete') THEN 'Y' ELSE 'N' END AS DsrReviewerApproval    
 ,CASE WHEN RDS.DSR_STATUS='Complete' THEN 'Y' ELSE 'N' END AS MRMAcknowledgement    
 ,RDS.DSR_STATUS AS DSRStatus      
 ,DSR.AUDIT_CREATED_DATE_TIME AS AuditCreationDate      
 ,DSR.UPDATED_DATE_TIME AS AuditUpdateDate      
 ,DSR.DSR_CLOSURE_DATE AS AuditClosureDate   
 FROM
(SELECT DISTINCT T1.MODEL_ID, T1.DSR_ID FROM 
(select MODEL_ID, DSR_ID from FACT_DSR 
UNION SELECT IMS_MODEL_NUMBER_CHILD , DSR_ID FROM [REL_DSR_IMS_ASSOCIATION ] ) AS T1) AS T2
LEFT JOIN FACT_DSR DSR ON DSR.DSR_ID=T2.DSR_ID    
 LEFT JOIN [REL_DSR_ASSOCIATION ] RDA ON DSR.DSR_ID=RDA.DSR_ID AND RDA.IS_ACTIVE = 1      
 LEFT JOIN [REF_DSR_STATUS ] RDS ON DSR.DSR_STATUS_ID=RDS.DSR_STATUS_ID      
 LEFT JOIN REF_USER_BASE RUB ON RUB.USER_ID=DSR.DSR_REVIEWER_ID      
 LEFT JOIN [REL_DSR_PLATFORM ] RDP ON DSR.DSR_ID=RDP.DSR_ID    
 LEFT JOIN FACT_IMPLEMENTATION_SYSTEM FIS ON RDP.FACT_SYS_ID=FIS.FACT_IMPL_SYS_ID    
 LEFT JOIN REF_SYSTEMS RS ON FIS.SYS_ID=RS.SYS_ID    
 LEFT JOIN FACT_SUBMISSION FS ON DSR.SOURCE_ID=FS.SUBMISSION_ID    
LEFT JOIN MODEL_INVENTORY MI ON T2.MODEL_ID=MI.MODEL_ID 
 where DSR.IS_ACTIVE=1 AND (RDA.MODEL_ID = T2.MODEL_ID OR RDA.MODEL_ID=FS.MODEL_ID)
GO


CREATE OR ALTER VIEW [dbo].[TASK_DETAILS]      
AS      
    (      
SELECT       
dbo.FACT_TASK.START_DATE,       
dbo.FACT_TASK.END_DATE,       
dbo.FACT_TASK.DUE_DATE,       
dbo.FACT_TASK.GENERIC_ID,       
dbo.FACT_TASK.GENERIC_TYPE,       
dbo.FACT_TASK.TOOL_ID,       
dbo.REL_TASK_USER.STATUS,       
dbo.REF_TASK_TYPE.TASK_TYPE_ID AS TASK_TYPE_ID1,       
dbo.REF_TASK_TYPE.TOOL_TYPE,      
dbo.REF_TASK_TYPE.WORKFLOW_NAME,       
dbo.REF_TASK_TYPE.WORKFLOW_TYPE,      
dbo.REF_TASK_TYPE.TASK_TYPE_NAME,      
dbo.REF_TASK_TYPE.TASK_RECIPIENT,      
dbo.REF_TASK_TYPE.TIMELINE_DAYS,       
dbo.REF_TASK_TYPE.TASK_TYPE_DESC,      
dbo.REL_TASK_USER.USER_ID      
,STUFF((              
    SELECT DISTINCT ' | ' + (ISNULL(RUB.DISPLAY_NAME, RUB.LAST_NAME + ' ' + RUB.FIRST_NAME))              
    FROM  REF_USER_BASE RUB       
    WHERE RUB.user_id =REL_TASK_USER.USER_ID              
    FOR XML PATH('')              
     ,TYPE              
    ).value('.', 'NVARCHAR(MAX)'), 1, 3, '') AS Assigned_user,      
dbo.REL_TASK_USER.ROLE_TYPE_CODE,      
dbo.REL_TASK_USER.TASK_USER_STATUS,      
dbo.FACT_TASK.TASK_ID,       
dbo.FACT_TASK.TASK_TYPE_ID,       
dbo.REL_TASK_USER.TASK_USER_ID,      
      
(case when dbo.FACT_TASK.GENERIC_TYPE='CUS' then (select ss_name from CUS_INVENTORY where CUS_ID=FACT_TASK.tool_Id)      
 when dbo.FACT_TASK.GENERIC_TYPE='CUS RAI' then  (select ss_name from CUS_INVENTORY ci, FACT_CUS_RAI fcr where fcr.CUS_RAI_ID=FACT_TASK.GENERIC_ID and fcr.CUS_ID=ci.CUS_ID)      
 when dbo.FACT_TASK.GENERIC_TYPE='CUS Submission' then  (select ss_name from CUS_INVENTORY where CUS_ID=FACT_TASK.tool_Id)      
 when dbo.FACT_TASK.GENERIC_TYPE='CUS CR' then  (select ss_name from CUS_INVENTORY where CUS_ID=FACT_TASK.tool_Id)      
 when dbo.FACT_TASK.GENERIC_TYPE='Attestation' then  (select cycle_name from FACT_ATTESTATION_CYCLE where CYCLE_ID=FACT_TASK.tool_Id) 
 when dbo.FACT_TASK.GENERIC_TYPE='DSR' then  (select MODEL_NAME from MODEL_INVENTORY where MODEL_ID=FACT_TASK.tool_Id)--dsr
 when dbo.FACT_TASK.GENERIC_TYPE='OI' then  (select top(1) mi.MODEL_NAME from FACT_MRF_OI fmo, MODEL_INVENTORY mi where FACT_SUBMISSION_ID=FACT_TASK.tool_Id and fmo.MODEL_ID=mi.MODEL_ID)      
 when dbo.FACT_TASK.GENERIC_TYPE='EST MIDC' then  (select MIDC_CYCLE_NAME from FACT_MIDC_CYCLE where MIDC_CYCLE_ID=FACT_TASK.tool_Id)      
 when dbo.FACT_TASK.TOOL_ID IS NULL then  'N/A'      
 else       
 (select MODEL_NAME from MODEL_INVENTORY where MODEL_ID=FACT_TASK.tool_Id)end ) as tool_name,      
(case when dbo.FACT_TASK.GENERIC_TYPE='CUS' then (select MODEL_ID from CUS_INVENTORY where CUS_ID=FACT_TASK.tool_Id)      
 when dbo.FACT_TASK.GENERIC_TYPE='CUS RAI' then  (select MODEL_ID from CUS_INVENTORY ci, FACT_CUS_RAI fcr where fcr.CUS_RAI_ID=FACT_TASK.GENERIC_ID and fcr.CUS_ID=ci.CUS_ID)      
 when dbo.FACT_TASK.GENERIC_TYPE='CUS Submission' then  (select MODEL_ID from CUS_INVENTORY where CUS_ID=FACT_TASK.tool_Id)      
 when dbo.FACT_TASK.GENERIC_TYPE='OI' then  (select top(1) mi.MODEL_ID from FACT_MRF_OI fmo, MODEL_INVENTORY mi where FACT_SUBMISSION_ID=FACT_TASK.tool_Id and fmo.MODEL_ID=mi.MODEL_ID)      
 when dbo.FACT_TASK.TOOL_ID IS NULL then  NULL      
 else       
 (select MODEL_ID from MODEL_INVENTORY where MODEL_ID=FACT_TASK.tool_Id)end ) as MODEL_ID,      
 (case when FACT_TASK.GENERIC_TYPE='RAI' then  (select generic_id from FACT_MRF_RAI fm where fm.RAI_ID=FACT_TASK.GENERIC_ID)      
 when FACT_TASK.GENERIC_TYPE='RM' then  (select generic_id from FACT_MRF_RM fr where fr.RM_ID=FACT_TASK.GENERIC_ID)end) AS MRF_SOURCE_ID,      
 (case when FACT_TASK.GENERIC_TYPE='RAI' then  (select generic_type from FACT_MRF_RAI fm where fm.RAI_ID=FACT_TASK.GENERIC_ID)      
 when FACT_TASK.GENERIC_TYPE='RM' then  (select generic_type from FACT_MRF_RM fr where fr.RM_ID=FACT_TASK.GENERIC_ID)end) AS MRF_SOURCE_TYPE      
FROM       
dbo.REL_TASK_USER       
INNER JOIN dbo.FACT_TASK       
ON dbo.FACT_TASK.TASK_ID = dbo.REL_TASK_USER.TASK_ID       
INNER JOIN      
dbo.REF_TASK_TYPE       
ON dbo.FACT_TASK.TASK_TYPE_ID = dbo.REF_TASK_TYPE.TASK_TYPE_ID     
WHERE dbo.REL_TASK_USER.USER_ID IS NOT NULL)
GO
